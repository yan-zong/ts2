//***************************************************************************
// * File:        This file is part of TS2.
// * Created on:  07 Nov 2016
// * Author:      Yan Zong, Xuewu Dai
// *
// * Copyright:   (C) 2016 Northumbria University, UK.
// *
// *              TS2 is free software; you can redistribute it and/or modify it
// *              under the terms of the GNU General Public License as published
// *              by the Free Software Foundation; either version 3 of the
// *              License, or (at your option) any later version.
// *
// *              TS2 is distributed in the hope that it will be useful, but
// *              WITHOUT ANY WARRANTY; without even the implied warranty of
// *              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// *              GNU General Public License for more details.
// *
// * Funding:     This work was financed by the Northumbria University Faculty
//                Funded and RDF funded studentship, UK
// ****************************************************************************

cplusplus {{
    #include "SimpleAddress.h"
}}

class LAddress::L3Type extends void;

// A basic network layer packet definition
//
// subclass if you want to create your own network layer packet class
//
// The basic network packet contains a destination and source network address.
// Additionally a time to live (ttl) field can be defined in order to limit the
// maximum number of hops the messge will travel. The sequence number is guranteed
// to be unique for all packets generated by one host
packet Packet
{
    // packet (inheritaged from mixim.src.base.message.NetwPkt.msg)
	LAddress::L3Type destAddr;   // destination address, use the L3 address format 
    LAddress::L3Type srcAddr;    // source address, use the L3 address format
	
	int packetType;    // see definitions in constant.h
    int source;        // node's index + addressoffset
    int destination;   // node's index + addressoffset
    double data;	// store timestamp
    
	double tsRx;   // transmission timestamp 
    double tsTx;   // receiving timestamp
}