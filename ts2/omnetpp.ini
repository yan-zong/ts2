[General]
network = Network
tkenv-image-path = ../../images;

ned-path = ./

# simulation time limit
sim-time-limit = 120s

**.cmdenv-ev-output = true
cmdenv-event-banners = true
cmdenv-module-messages = false
cmdenv-express-mode = true
# event log
record-eventlog = true
# simulation data files
output-vector-file = ./myresult/${configname}-${runnumber}.vec
output-scalar-file = ./myresult/measure.sca
output-scalar-file-append = true

##########################################################
#			Parameters for Master                        #
##########################################################
**.mnode.clock.offset = 0	# offset initial value [s]
**.mnode.clock.drift = 0	# drift initial value [ppm] 
**.mnode.clock.sigma1 = 0	# drift noise std
**.mnode.clock.sigma2 = 0	# offset noise std
**.mnode.clock.sigma3 = 0	# measurement noise std
**.mnode.clock.u3= 0	# measurement noise mean
**.mnode.clock.alpha = 0	# the correction parameter of clock offset
**.mnode.clock.beta = 0	# the correction parameter of clock skew 
**.mnode.clock.tau_0 = 30.51757813E-6	# clock update period
**.mnode.clock.Threshold = 1	# threshold
**.mnode.clock.pulseDuration = 0s
**.mnode.clock.ScheduleOffset = 0s	# scheduled offset
**.mnode.clock.tau = 0s	# transmission delay
**.mnode.clock.CorrectionAlgorithm = 0	# null 
**.mnode.clock.varepsilon = 0	# for classic PCO

##########################################################
#			Parameters for Slave                        #
##########################################################
# **.snode[*].clock.offset = 0	# offset initial value
# **.snode[*].clock.drift = 0	# drift initial value
# **.snode[*].clock.sigma1 = 0	# drift noise std
# **.snode[*].clock.sigma2 = 0	# offset noise std
# **.snode[*].clock.sigma3 = 0	# measurement noise std
# **.snode[*].clock.u3= 0	# measurement noise mean
# **.snode[*].clock.alpha = 1	# the correction parameter of clock offset
# **.snode[*].clock.beta = 1	# the correction parameter of clock skew
**.snode[*].clock.tau_0 = 30.51757813E-6	#clock update period	
**.snode[*].clock.Threshold = 1
**.snode[*].clock.pulseDuration = 0.672ms
**.snode[*].clock.ScheduleOffset = 400ms
**.snode[*].clock.tau = 0.48ms
# **.snode[*].clock.CorrectionAlgorithm = 1
# **.snode[*].clock.varepsilon = 0.2	# for classic PCO

##########################################################
#			Parameters for Relay                        #
##########################################################
# **.rnode[*].clock.offset = 0E-3	# offset initial value [s]
# **.rnode[*].clock.drift = 1E-4	# drift	initial value [ppm]
# **.rnode[0].clock.sigma1 = 1E-8	# drift noise  std
# **.rnode[1].clock.sigma1 = 1E-7	# drift noise  std
# **.rnode[0].clock.sigma2 = 1E-7	# offset noise  std
# **.rnode[1].clock.sigma2 = 1E-6	# offset noise  std
# **.rnode[*].clock.sigma3 = 0	# measurement noise std
# **.rnode[*].clock.u3= 0	# measurement noise mean
# **.rnode[*].clock.alpha = 1	# the correction parameter of clock offset
# **.rnode[*].clock.beta = 1	# the correction parameter of clock skew
**.rnode[*].clock.tau_0 = 30.51757813E-6	# clock update period
**.rnode[*].core.manager.Tciclico = 0	#Periodo messaggi ciclici[s]
**.rnode[*].core.manager.Byte = 48  	#Durata in byte dei pacchetti 	[Byte]
**.rnode[*].core.manager.Number = 1	#numero di pacchetti di un burst
**.rnode[*].clock.Threshold = 1
**.rnode[*].clock.pulseDuration = 0.672ms
**.rnode[*].clock.ScheduleOffset = 200ms
**.rnode[*].clock.tau = 0.48ms	# transmission delay
# **.rnode[*].clock.CorrectionAlgorithm = 1
# **.rnode[*].clock.varepsilon = 0.2	# for classic PCO

num-rngs = 2
**.rng-0 = 0
**.rng-1 = 1
#**.rng-2 = 2
repeat = 500
seed-0-mt =100 #${runnumber}
#seed-2-mt = ${runnumber}
seed-1-mt = 9  # let RNG 1's seed is always 9


##########################################################
#			Playground parameters                        #
##########################################################
tkenv-default-config = 
*.**.coreDebug = false
*.**.debug = false
*.playgroundSizeX = 800m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 0m
*.numHosts = 0	# useless in the ts2 
*.numMaster = 1	# determine the number of master in the network
*.numSlave = 1	# determine the number of slave in the network
*.numRelay = 1	# determine the number of relay in the network

##########################################################
#			WorldUtility parameters                      #
##########################################################
*.world.useTorus = false
*.world.bitrate = 250000

##########################################################
#			channel parameters                  		 #
##########################################################
*.connectionManager.sendDirect = false
*.connectionManager.pMax = 1.1mW
*.connectionManager.sat = -100dBm
*.connectionManager.alpha = 2.5
*.connectionManager.carrierFrequency = 2.4E+9Hz

##########################################################
#			PhyLayer parameters for TDMA		         #
##########################################################
**.nic.phy.headerLength = 48bit	# 6 bytes for physical layer (PCO)
**.nic.phy.usePropagationDelay = false
**.nic.phy.thermalNoise = -100dBm
**.nic.phy.useThermalNoise = true
**.nic.phy.analogueModels = xmldoc("config.xml")
**.nic.phy.decider = xmldoc("config.xml")
**.nic.phy.maxTXPower = 100.0mW
**.nic.phy.sensitivity = -84dBm
**.nic.phy.initialRadioState = 0

##########################################################
#			Timestamp							         #
##########################################################
**.**.timestamp.useReferenceClock = false

##########################################################
#			MAC parameters for TDMA				         #
##########################################################
**.**.nic.mac.headerLength = 104bit	# 13 bytes for mac layer (PCO)
# the length of the queue - if exceeded, new packets are dropped
**.**.nic.mac.queueLength = 1E6
**.**.nic.mac.bitrate = 250000 bps
**.**.nic.mac.txPower = 100
**.**.nic.mac.defaultChannel = 0
**.**.nic.mac.stats = true
# duration of one slot
**.**.nic.mac.slotDuration = 1.376ms
**.**.nic.mac.trace = true

##########################################################
#			NETW layer parameters				         #
##########################################################
**.netwl.headerLength = 0bit	

##########################################################
#			APPL layer parameters				         #
##########################################################
**.appl.burstSize = 0
**.appl.headerLength = 128bit

##########################################################
#			ArpHost module parameters			         #
##########################################################
# Fpr simplicity, keep the address of all the layers the SAME
*.mnode*.arp.offset = 1000
*.mnode*.core.masterAddrOffset=1000

*.rnode[*].arp.offset = 2000
*.rnode[*].core.RelayMaster.masterAddrOffset=2000
*.rnode[*].core.RelaySlave.slaveAddrOffset=2000

*.snode[*].arp.offset = 3000
*.snode[*].core.slaveAddrOffset = 3000

##########################################################
#			Mobility parameters					         #
##########################################################
**.mobilityType = "ConstSpeedMobility"

**.mobility.initFromDisplayString = false
**.mobility.initialZ = 0m

*.mnode*.mobility.initialX = 250m
*.mnode*.mobility.initialY = 250m

*.snode[0].mobility.initialX = 200m
*.snode[0].mobility.initialY = 250m

*.snode[1].mobility.initialX = 250m
*.snode[1].mobility.initialY = 200m

*.rnode[0].mobility.initialX = 200m
*.rnode[0].mobility.initialY = 200m

*.rnode[1].mobility.initialX = 300m
*.rnode[1].mobility.initialY = 300m

*.rnode[2].mobility.initialX = 400m
*.rnode[2].mobility.initialY = 400m

*.mnode*.mobility.speed = 0
*.snode[*].mobility.speed = 0
*.rnode[*].mobility.speed = 0

##########################################################
#			Battery parameters					         #
##########################################################
**.battery.nominal = 99999mAh
**.battery.capacity = 99999mAh
**.battery.voltage = 3.3V
**.battery.resolution = 0.1s
**.battery.publishDelta = 1
**.battery.publishTime = 0
**.battery.numDevices = 1

**.batteryStats.detail = false
**.batteryStats.timeSeries = false

[Config ClassicIdenticalPCO] 
description = "Simulate the performance of classic PCO with identical frequency in single-hop wireless sensor networks"
# this simularion is to the SSCE of classic PCO, and the
# network topology is made up of one master node, 
# three relay nodes and ten slave nodes.

# configuration of slave drifting clock 
**.snode[*].clock.sigma1 = 0	# drift noise std
**.snode[*].clock.drift = 0	# drift initial value

**.snode[*].clock.sigma2 = 0	# offset noise std
**.snode[0].clock.offset = -4E-1	# offset initial value
**.snode[1].clock.offset = -4E-1	# offset initial value

**.snode[*].clock.sigma3 = 0	# measurement noise std
**.snode[*].clock.u3= 0	# measurement noise mean

# configuration of relay drifting clock 
**.rnode[*].clock.sigma1 = 0  # drift noise  std
**.rnode[*].clock.drift = 0	# drift	initial value [ppm]

**.rnode[*].clock.sigma2 = 0	# offset noise  std
**.rnode[3].clock.offset = 4E-1	# offset initial value [s]
**.rnode[2].clock.offset = 4E-1	# offset initial value [s]
**.rnode[1].clock.offset = 4E-1	# offset initial value [s]
**.rnode[0].clock.offset = 4E-1	# offset initial value [s]

**.rnode[*].clock.sigma3 = 0	# measurement noise std
**.rnode[*].clock.u3= 0	# measurement noise mean

# configuration of interaction mode in classic PCO
# correction algorithm is 1, that means the classic PCO coupling strength to correct the PCO clock state
# correction algorithm is 2, that means the measurement offset to correct the PCO clock state
**.snode[*].clock.CorrectionAlgorithm = 1
**.rnode[*].clock.CorrectionAlgorithm = 1

**.**.clock.refractory = 1E-4	# refractory period [s]
# **.mnode.clock.refractory = 1E-5	# refractory period [s]
# **.rnode[*].clock.refractory = 1E-5	# refractory period [s]
# **.snode[*].clock.refractory = 1E-5	# refractory period [s]

**.snode[*].clock.varepsilon = 5E-2	# for classic PCO coupling strength [s]
**.rnode[*].clock.varepsilon = 5E-2	#  for classic PCO coupling strength [s]

**.snode[*].clock.alpha = 0	# the correction parameter of clock offset
**.snode[*].clock.beta = 0	# the correction parameter of clock skew

**.rnode[*].clock.alpha = 0	# the correction parameter of clock offset
**.rnode[*].clock.beta = 0	# the correction parameter of clock skew

[Config FreeRunningClassicNonidenticalPCO] 
description = "Simulate the free-running state of classic nonidentical PCO in single-hop wireless sensor networks"
# this simularion is to the SSCE of classic PCO, and the
# network topology is made up of one master node, 
# three relay nodes and ten slave nodes.

# configuration of slave drifting clock 
**.snode[*].clock.sigma1 = 1E-8	# drift noise std
**.snode[*].clock.drift = 1E-4	# drift initial value

**.snode[*].clock.sigma2 = 1E-7	# offset noise std
**.snode[*].clock.offset = 1E-2	# offset initial value

**.snode[*].clock.sigma3 = 0	# measurement noise std
**.snode[*].clock.u3= 0	# measurement noise mean

# configuration of interaction mode in classic PCO
# correction algorithm is 1, that means the classic PCO coupling strength to correct the PCO clock state
# correction algorithm is 2, that means the measurement offset to correct the PCO clock state
**.snode[*].clock.CorrectionAlgorithm = 0
**.rnode[*].clock.CorrectionAlgorithm = 0

**.mnode.clock.refractory = 0	# refractory period [s]
**.rnode[*].clock.refractory = 0	# refractory period [s]
**.snode[*].clock.refractory = 0	# refractory period [s]

**.snode[*].clock.varepsilon = 0	# for classic PCO coupling strength [s]
**.rnode[*].clock.varepsilon = 0	#  for classic PCO coupling strength [s]

**.snode[*].clock.alpha = 0	# the correction parameter of clock offset
**.snode[*].clock.beta = 0	# the correction parameter of clock skew

**.rnode[*].clock.alpha = 0	# the correction parameter of clock offset
**.rnode[*].clock.beta = 0	# the correction parameter of clock skew

[Config InteractionClassicNonidenticalPCO] 
description = "Simulate the interaction state of classic nonidentical PCO in single-hop wireless sensor networks"
# this simularion is to the SSCE of classic PCO, and the
# network topology is made up of one master node, 
# three relay nodes and ten slave nodes.

# configuration of slave drifting clock 
**.snode[*].clock.sigma1 = 1E-9	# drift noise std
**.snode[*].clock.drift = 1E-4	# drift initial value

**.snode[*].clock.sigma2 = 1E-7	# offset noise std
**.snode[*].clock.offset = 1E-3	# offset initial value

**.snode[*].clock.sigma3 = 0	# measurement noise std
**.snode[*].clock.u3= 0	# measurement noise mean

# configuration of interaction mode in classic PCO
# correction algorithm is 1, that means the classic PCO coupling strength to correct the PCO clock state
# correction algorithm is 2, that means the measurement offset to correct the PCO clock state
**.snode[*].clock.CorrectionAlgorithm = 1
**.rnode[*].clock.CorrectionAlgorithm = 1

**.**.clock.refractory = 1E-3	# refractory period [s]
# **.mnode.clock.refractory = 1E-4	# refractory period [s]
# **.rnode[*].clock.refractory = 1E-4	# refractory period [s]
# **.snode[*].clock.refractory = 1E-4	# refractory period [s]

**.**.clock.varepsilon = 2E-2	# for classic PCO coupling strength [s]
# **.snode[*].clock.varepsilon = 2E-2	# for classic PCO coupling strength [s]
# **.rnode[*].clock.varepsilon = 2E-2	#  for classic PCO coupling strength [s]

**.snode[*].clock.alpha = 0	# the correction parameter of clock offset
**.snode[*].clock.beta = 0	# the correction parameter of clock skew

**.rnode[*].clock.alpha = 0	# the correction parameter of clock offset
**.rnode[*].clock.beta = 0	# the correction parameter of clock skew

[Config ClassicIdenticalPCO4Multi-hopWSNs] 
description = "Simulate the performance of classic PCO with identical frequency in multi-hop wireless sensor networks"
# this simularion is to the SSCE of classic PCO, and the
# network topology is made up of one master node, 
# three relay nodes and ten slave nodes.

# configuration of slave drifting clock 
**.snode[*].clock.sigma1 = 0	# drift noise std
**.snode[*].clock.drift = 0	# drift initial value

**.snode[*].clock.sigma2 = 0	# offset noise std
**.snode[0].clock.offset = 0	# offset initial value
**.snode[1].clock.offset = 0	# offset initial value

**.snode[*].clock.sigma3 = 0	# measurement noise std
**.snode[*].clock.u3= 0	# measurement noise mean

# configuration of relay drifting clock 
**.rnode[*].clock.sigma1 = 0  # drift noise  std
**.rnode[*].clock.drift = 0	# drift	initial value [ppm]

**.rnode[*].clock.sigma2 = 0	# offset noise  std
**.rnode[0].clock.offset = 1E-2	# offset initial value [s]
**.rnode[1].clock.offset = 1E-2	# offset initial value [s]
**.rnode[2].clock.offset = 1E-3	# offset initial value [s]

**.rnode[*].clock.sigma3 = 0	# measurement noise std
**.rnode[*].clock.u3= 0	# measurement noise mean

# configuration of interaction mode in classic PCO
# correction algorithm is 1, that means the classic PCO coupling strength to correct the PCO clock state
# correction algorithm is 2, that means the measurement offset to correct the PCO clock state
**.snode[*].clock.CorrectionAlgorithm = 1
**.rnode[*].clock.CorrectionAlgorithm = 1

**.**.clock.refractory = 1E-3	# refractory period [s]
# **.mnode.clock.refractory = 1E-5	# refractory period [s]
# **.rnode[*].clock.refractory = 1E-5	# refractory period [s]
# **.snode[*].clock.refractory = 1E-5	# refractory period [s]

**.snode[*].clock.varepsilon = 2E-2	# for classic PCO coupling strength [s]
**.rnode[*].clock.varepsilon = 2E-2	#  for classic PCO coupling strength [s]

**.snode[*].clock.alpha = 0	# the correction parameter of clock offset
**.snode[*].clock.beta = 0	# the correction parameter of clock skew

**.rnode[*].clock.alpha = 0	# the correction parameter of clock offset
**.rnode[*].clock.beta = 0	# the correction parameter of clock skew

[Config PkCO4Single-hopWSN] 
description = "Simulate the PkCOs in single-hop wireless sensor networks"
# this simulation is to the SSCE of classic PCO, and the
# network topology is made up of master , and slave (or relay) nodes

# configuration of slave drifting clock 
**.snode[*].clock.sigma1 = 1E-9	# drift noise std
**.snode[*].clock.drift = 1E-4	# drift initial value

**.snode[*].clock.sigma2 = 1E-7	# offset noise std
**.snode[*].clock.offset = 3E-1	# offset initial value

**.snode[*].clock.sigma3 = 0	# measurement noise std
**.snode[*].clock.u3= 0	# measurement noise mean

# configuration of slave drifting clock 
**.rnode[*].clock.sigma1 = 1E-9	# drift noise std
**.rnode[*].clock.drift = 1E-4	# drift initial value

**.rnode[*].clock.sigma2 = 1E-7	# offset noise std
**.rnode[*].clock.offset = 3E-1	# offset initial value

**.rnode[*].clock.sigma3 = 0	# measurement noise std
**.rnode[*].clock.u3= 0	# measurement noise mean

# configuration of interaction mode in classic PCO
# correction algorithm is 1, that means the classic PCO coupling strength to correct the PCO clock state
# correction algorithm is 2, that means the measurement offset to correct the PCO clock state
**.snode[*].clock.CorrectionAlgorithm = 3
**.rnode[*].clock.CorrectionAlgorithm = 3

**.**.clock.refractory = 1E-3	# refractory period [s]
# **.mnode.clock.refractory = 1E-4	# refractory period [s]
# **.rnode[*].clock.refractory = 1E-4	# refractory period [s]
# **.snode[*].clock.refractory = 1E-4	# refractory period [s]

**.**.clock.varepsilon = 2E-2	# for classic PCO coupling strength [s]
# **.snode[*].clock.varepsilon = 2E-2	# for classic PCO coupling strength [s]
# **.rnode[*].clock.varepsilon = 2E-2	#  for classic PCO coupling strength [s]

**.snode[*].clock.alpha = 0.9	# the correction parameter of clock offset
**.snode[*].clock.beta = 0.1	# the correction parameter of clock skew

**.rnode[*].clock.alpha = 0.9	# the correction parameter of clock offset
**.rnode[*].clock.beta = 0.1	# the correction parameter of clock skew