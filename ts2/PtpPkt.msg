//***************************************************************************
// * File:        This file is part of TS2.
// * Created on:  07 Dov 2016
// * Author:      Yan Zong, Xuweu Dai
// *
// * Copyright:   (C) 2016 Northumbria University, UK.
// *
// *              TS2 is free software; you can redistribute it and/or modify it
// *              under the terms of the GNU General Public License as published
// *              by the Free Software Foundation; either version 3 of the
// *              License, or (at your option) any later version.
// *
// *              TS2 is distributed in the hope that it will be useful, but
// *              WITHOUT ANY WARRANTY; without even the implied warranty of
// *              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// *              GNU General Public License for more details.
// *
// * Funding:     This work was financed by the Northumbria University Faculty
//                Funded and RDF funded studentship, UK
// ****************************************************************************

cplusplus {{
    #include "SimpleAddress.h"
}}

class LAddress::L3Type extends void;

// ****************************************************************************
// * A basic network layer packet definition
//
// * The basic network packet contains a destination and source network address.
// * Additionally a time to live (ttl) field can be defined in order to limit the
// * maximum number of hops the messge will travel. The sequence number is guranteed
// * to be unique for all packets generated by one host
// ****************************************************************************
packet PtpPkt
{
    // packet (inheritaged from mixim.src.base.message.NetwPkt.msg)
    // TODO: the L3Type address (destAddr, srcAddr) have the same function as the fields of source, destination
    //       get rid of the L3Type address to keep the codes neat.
    // ToDo: double check whether the 'L3Type address' is gotten rid of or not    
    LAddress::L3Type destAddr;   // destination address, use the L3 address format 
    LAddress::L3Type srcAddr;    // source address, use the L3 address format
    
    int              ttl = 1;    // time to live field (IP)
    unsigned long    seqNum = 0; // sequence number
    
    // fields inheritaged from TSim.Packet.msg
    int ptpType;	// see definitions in constant.h
    int source;		// node's index + address offset
    int destination;	// node's index + address offset
    double data;	//store time stampe
    
    
    // ToDo: double check variable 'hdwr_tsRxTx' is used or not 
    
    // When Core module puts a (software) time-stamp on a packet, hdwr_tsRxTx is set to false
    // when Timestamp module puts a (hardware) time-stamp on the packet, hdwr_tsRxTx is set to true
    // At receiving, Core Module checks hardware time-stamp status and decides which receiving time-
    // stamp should be used. If hdwr_tsRxTx == true, then use the packet's tsTX and tsRX
    // if hdwr_tsRxTx == false, then use the packet's tsTX as the tx time stamp, but use the
    // current as the receiving time stamp.
    bool hdwr_tsRxTx;      
    
    double tsRx;   // transmission time-stamp 
    double tsTx;   // receiving time-stamp
    
    // store the four time stamps for present time synchronization
    double ts1_SYNC; // ts1 by master on SYNC packet
    double ts2_SYNC; // ts2 by slave on SYNC packe
    double ts3_DREQ; // ts3 by slave on DREQ
    double ts4_DREQ; // ts4 by maser on DREQ
     
}

